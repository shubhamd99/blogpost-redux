{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postReducer.js","reducers/userReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","jsonPlaceholder","get","sent","type","payload","data","stop","_x3","apply","this","arguments","fetchUser","id","_ref3","_callee3","_context3","concat","_x4","UserHeader","user","props","react_default","createElement","name","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","className","key","title","body","components_UserHeader","renderList","_ref","_callee","getState","_context","_","uniq","forEach","_x","_x2","App","components_PostList","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.30407b35.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n\tbaseURL: 'https://jsonplaceholder.typicode.com'\r\n})","import _ from 'lodash';\r\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\r\n\r\n// Solving Overfetching Issue\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n\tawait dispatch(fetchPosts());\r\n\r\n\tconst userIds = _.uniq(_.map(getState().posts, 'userId'));\r\n\tuserIds.forEach(id => dispatch(fetchUser(id)));\r\n}\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n\tconst response = await jsonPlaceholder.get('/posts');\r\n\r\n\tdispatch({ type: 'FETCH_POSTS', payload: response.data })\r\n}\r\n\r\nexport const fetchUser = id => async dispatch => {\r\n\tconst response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n\tdispatch({ type: 'FETCH_USER', payload: response.data })\r\n};\r\n\r\n\r\n// Lodash will not do the same fetch request again and again, it will memorize it.\r\n// Ex. Fetch one user one time only (Removes Overfetching Issue)\r\n/*\r\nconst _fetchUser = _.memoize(async (id, dispatch) => {\r\n\tconst response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n\tdispatch({ type: 'FETCH_USER', payload: response.data })\r\n})\r\n*/\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserHeader extends Component {\r\n\r\n\trender() {\r\n\t\tconst { user } = this.props;\r\n\r\n\t\tif(!user) {\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\treturn <div>{user.name}</div>\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn { user: state.users.find(user => user.id === ownProps.userId) }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserHeader);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPostsAndUsers } from '../actions';\r\nimport './App.css';\r\nimport UserHeader from './UserHeader';\r\n\r\nclass PostList extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.fetchPostsAndUsers();\r\n\t}\r\n\r\n\trenderList() {\r\n\t\treturn this.props.posts.map((post) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"item posts\" key={post.id}>\r\n\t\t\t\t\t<i className=\"large middle aligned icon user\" />\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<div className=\"description\">\r\n\t\t\t\t\t\t\t<h2>{post.title}</h2>\r\n\t\t\t\t\t\t\t<p>{post.body}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<strong><UserHeader userId={post.userId} /></strong>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\t// console.log(this.props.posts)\r\n\t\treturn (\r\n\t\t\t<div>{this.renderList()}</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn { posts: state.posts }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);\r\n","import React from 'react';\r\nimport './App.css'\r\nimport PostList from './PostList';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <PostList />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux'; \r\nimport postReducer from './postReducer';\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n\tposts: postReducer,\r\n\tusers: userReducer\r\n});","export default (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'FETCH_POSTS':\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t};\r\n};","export default (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'FETCH_USER':\r\n\t\t\treturn [...state, action.payload];\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t};\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n  <Provider store={ store }>\r\n\t<App />\r\n  </Provider>, \r\n\tdocument.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}